@import "font";          // Import font styles
@import "color";         // Import color definitions
@import "border";        // Import border styles
@import "animation";     // Import animation styles

// Define default font sizes and label positions
$default-font-size: $kri-font-size-16;
$small-font-size: $kri-font-size-14;
$large-font-size: $kri-font-size-18;
$label-top-default: 14px;
$label-top-small: 12px;
$label-top-large: 18px;
$label-color-default: $kri-form-control-placeholder;
$label-color-active: $kri-form-control-label-active;
$label-bg-color: $kri-white;

// Mixin to apply active label styles
@mixin active-label-styles {
  top: -8px;
  left: 12px;
  font-size: $kri-font-size-12;
  color: $label-color-active;
  background-color: $label-bg-color;
}

.kri-float-label {
  position: relative;

  label {
    position: absolute;
    top: $label-top-default;
    left: 16px;
    font-size: $default-font-size;
    font-family: $font-family;
    font-weight: 500;
    font-style: normal;
    color: $label-color-default;
    pointer-events: none;
    transition: all 0.2s ease-out;
    line-height: normal;
    padding: 0 4px;
    border-radius: $kri-border-radius-4;

    // Styles for small label
    &.kri-input-label-small {
      font-size: $small-font-size;
      top: $label-top-small;
    }

    // Styles for large label
    &.kri-input-label-large {
      font-size: $large-font-size;
      top: $label-top-large;
    }
  }

  // Label position and style adjustments based on input state
  > .kri-input-text,
  > .kri-textarea {
    &:not(.kri-select-input) {
      &:not(:placeholder-shown) + label,
      &:focus + label,
      &[data-has-value="true"] + label {
        @include active-label-styles; // Apply active label styles
      }

      &:not(:placeholder-shown):not(:focus) + label {
        top: $label-top-default;
        left: 16px;
        font-size: $default-font-size;
        color: $label-color-default;
      }
    }
  }

  // Placeholder text color for inputs
  > .kri-input-text::placeholder,
  > .kri-textarea::placeholder {
    color: transparent;
  }

  // Placeholder text color when input is focused
  > .kri-input-text:focus::placeholder,
  > .kri-textarea:focus::placeholder {
    color: transparent;
  }
}

// Styles for text input
.kri-input-text {
  width: 100%;
  height: 48px;
  font-size: $default-font-size;
  font-family: $font-family;
  font-weight: 500;
  font-style: normal;
  text-overflow: ellipsis;

  // Styles for small text input
  &.kri-input-text-sm {
    font-size: $small-font-size;
    height: 40px;
  }

  // Styles for large text input
  &.kri-input-text-lg {
    font-size: $large-font-size;
    height: 56px;
  }
}

// Styles for textarea
.kri-textarea {
  width: 100%;
  max-width: 100%;
  min-width: 36px;
  min-height: 28px;
  font-size: $default-font-size;
  font-family: $font-family;
  font-weight: 500;
  font-style: normal;

  // Counter for character limits in textarea
  + .kri-textarea-counter {
    float: left;
    display: block;
    position: relative;
    pointer-events: none;
    overflow: visible;
    color: $kri-textarea-aide-text;
    font-size: $kri-font-size-12;
    width: 0 !important; // Force width to 0

    & > i {
      display: block;
      font-style: normal;
      white-space: nowrap;
      text-align: right;
      position: relative;
      right: 10px;
      bottom: 7px;
    }
  }
}

// Common styles for input text and textarea
.kri-input-text,
.kri-textarea {
  box-sizing: border-box;
  padding: 12px 12px 12px 16px;
  color: $kri-black-87;
  vertical-align: middle;
  border: 1px solid $kri-form-control-line;
  border-radius: $kri-border-radius-8;
  outline: none;
  background-color: $kri-form-control-bg;
  box-shadow: 0 0 0 0 $kri-form-control-interactive-outline;

  &:hover {
    border-color: $kri-form-control-line-hover; // Border color on hover
    color: $kri-form-control-line-hover;

    + label {
      color: $kri-form-control-label-hover; // Label color on hover
    }
  }

  &:focus {
    border-color: $kri-form-control-label-active; // Border color on focus
  }

  input:not(.kri-select-input):focus + label,
  input:not(.kri-select-input)[data-focused="true"] + label,
  &[data-has-value="true"] + label {
    @include active-label-styles; // Apply active label styles
  }

  // Placeholder styles
  &::placeholder {
    color: $kri-form-control-placeholder;
    transition: color $kri-animation-duration-slow $kri-animation-ease-in-out-smooth;
  }

  &:focus::placeholder,
  &:focus:placeholder-shown::placeholder {
    color: transparent; // Placeholder color on focus
  }

  &[disabled],
  &.disabled {
    cursor: not-allowed; // Disable input cursor
    background-color: $kri-form-control-disabled-bg;
    border-color: $kri-form-control-disabled-line;
    color: $kri-form-control-disabled-text;

    &:focus + label,
    &[data-focused="true"] + label,
    &[data-has-value="true"] + label {
      @include active-label-styles; // Apply active label styles
    }
  }

  &[data-has-error="true"] {
    border-color: $kri-form-control-danger-line;
    + label {
      color: $kri-form-control-danger-label !important;
    }

    &:focus + label,
    &[data-focused="true"] + label,
    &[data-has-value="true"] + label {
      @include active-label-styles; // Apply active label styles for error state
    }
  }
}

// Styles for autofill inputs
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s; // Ensure background color remains consistent
}

// Disable animation for labels with class .no-animation
.no-animation + label {
  transition: none;
}
